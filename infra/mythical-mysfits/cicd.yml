---
AWSTemplateFormatVersion: '2010-09-09'
Description: Module 2 CICD https://aws.amazon.com/getting-started/hands-on/build-modern-app-fargate-lambda-dynamodb-python/module-two/
Parameters:
  AwsProfile:
    Type: String
    AllowedValues:
    - qa
    - prod
Resources:
  CodeBuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
        - "${AwsProfile}-comp9447-team4-mythical-mysfits-codebuild-artifacts"
        - AwsProfile: !Ref AwsProfile

  LambdaArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
        - "${AwsProfile}-comp9447-team4-mythical-mysfits-lambda-artifacts"
        - AwsProfile: !Ref AwsProfile

  # aws s3api put-bucket-policy --bucket REPLACE_ME_ARTIFACTS_BUCKET_NAME --policy file://~/environment/aws-modern-application-workshop/module-2/aws-cli/artifacts-bucket-policy.json
  CodeBuildArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodeBuildArtifactsBucket
      PolicyDocument:
        Statement:
        - Sid: WhitelistedGet
          Effect: Allow
          Principal:
            AWS:
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodeBuildServiceRole
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodePipelineServiceRole
          Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          Resource:
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}/*'
            - BucketName: !Ref CodeBuildArtifactsBucket
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}'
            - BucketName: !Ref CodeBuildArtifactsBucket
        - Sid: WhitelistedPut
          Effect: Allow
          Principal:
            AWS:
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodeBuildServiceRole
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodePipelineServiceRole
          Action: s3:PutObject
          Resource:
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}/*'
            - BucketName: !Ref CodeBuildArtifactsBucket
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}'
            - BucketName: !Ref CodeBuildArtifactsBucket

  # BUILD PROJECT
  # aws codebuild create-project --cli-input-json file://~/environment/aws-modern-application-workshop/module-2/aws-cli/code-build-project.json
  CodeBuildProjectMysfitsService:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MythicalMysfitsServiceCodeBuildProject
      BadgeEnabled: true
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.5.2
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: AWS_ACCOUNT_ID
          Value: !Sub "${AWS::AccountId}"
        - Name: AWS_DEFAULT_REGION
          Value: !Sub "${AWS::Region}"
        Type: LINUX_CONTAINER
      ServiceRole: !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodeBuildServiceRole
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html
      # For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the build spec. You must connect your AWS account to your GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access, choose Request access next to each repository you want to allow AWS CodeBuild to have access to, and then choose Authorize application. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the source object, set the auth object's type value to OAUTH. 
      Source:
        Type: GITHUB
        Location: https://github.com/comp9447-team4/soar
        BuildSpec: mythical-mysfits/mysfits-service/buildspec.yml
        ReportBuildStatus: true
        Auth:
          Type: OAUTH


  # CODEPIPELINE
  # aws codepipeline create-pipeline --cli-input-json file://~/environment/aws-modern-application-workshop/module-2/aws-cli/code-pipeline.json
  CodePipelineMysfitsService:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MythicalMysfitsServiceCICDPipeline
      RoleArn: !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodePipelineServiceRole
      Stages:
      # Use Github Codestar as source
      # https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodestarConnectionSource.html
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: CodeStarSourceConnection
          OutputArtifacts:
          - Name: MythicalMysfitsService-SourceArtifact
          Configuration:
            ConnectionArn: !ImportValue GithubRepoCodeStarConnectionArn
            BranchName: master
            FullRepositoryId: comp9447-team4/soar
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          OutputArtifacts:
          - Name: MythicalMysfitsService-BuildArtifact
          InputArtifacts:
          - Name: MythicalMysfitsService-SourceArtifact
          Configuration:
            ProjectName: MythicalMysfitsServiceCodeBuildProject
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: ECS
          InputArtifacts:
          - Name: MythicalMysfitsService-BuildArtifact
          Configuration:
            ClusterName: MythicalMysfits-Cluster
            ServiceName: MythicalMysfits-Service
            FileName: imagedefinitions.json
      ArtifactStore:
        Type: S3
        Location: !Ref CodeBuildArtifactsBucket

Outputs:
  CodeBuildArtifactsBucket:
    Value: !Ref CodeBuildArtifactsBucket
    Description: CodeBuildArtifactsBucket
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'CodeBuildArtifactsBucket' ] ]
  LambdaArtifactsBucket:
    Value: !Ref LambdaArtifactsBucket
    Description: Lambda artifacts bucket
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'LambdaArtifactsBucket' ] ]
