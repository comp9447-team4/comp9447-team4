---
AWSTemplateFormatVersion: '2010-09-09'
Description: Module 2 CICD https://aws.amazon.com/getting-started/hands-on/build-modern-app-fargate-lambda-dynamodb-python/module-two/

Mappings:
  Branch:
    us-east-1:
      qa: master
      prod: release

Parameters:
  AwsProfile:
    Type: String
    AllowedValues:
    - qa
    - prod

Resources:
  CodeBuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
        - "${AwsProfile}-comp9447-team4-mythical-mysfits-codebuild-artifacts"
        - AwsProfile: !Ref AwsProfile

  LambdaArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
        - "${AwsProfile}-comp9447-team4-mythical-mysfits-lambda-artifacts"
        - AwsProfile: !Ref AwsProfile

  # aws s3api put-bucket-policy --bucket REPLACE_ME_ARTIFACTS_BUCKET_NAME --policy file://~/environment/aws-modern-application-workshop/module-2/aws-cli/artifacts-bucket-policy.json
  CodeBuildArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodeBuildArtifactsBucket
      PolicyDocument:
        Statement:
        - Sid: WhitelistedGet
          Effect: Allow
          Principal:
            AWS:
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodeBuildServiceRole
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodePipelineServiceRole
          Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          Resource:
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}/*'
            - BucketName: !Ref CodeBuildArtifactsBucket
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}'
            - BucketName: !Ref CodeBuildArtifactsBucket
        - Sid: WhitelistedPut
          Effect: Allow
          Principal:
            AWS:
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodeBuildServiceRole
            - !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodePipelineServiceRole
          Action: s3:PutObject
          Resource:
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}/*'
            - BucketName: !Ref CodeBuildArtifactsBucket
          - Fn::Sub:
            - 'arn:aws:s3:::${BucketName}'
            - BucketName: !Ref CodeBuildArtifactsBucket

  # BUILD PROJECT
  # aws codebuild create-project --cli-input-json file://~/environment/aws-modern-application-workshop/module-2/aws-cli/code-build-project.json
  CodeBuildProjectMysfitsService:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MythicalMysfitsServiceCodeBuildProject
      BadgeEnabled: true
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.5.2
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: AWS_ACCOUNT_ID
          Value: !Sub "${AWS::AccountId}"
        - Name: AWS_DEFAULT_REGION
          Value: !Sub "${AWS::Region}"
        Type: LINUX_CONTAINER
      ServiceRole: !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodeBuildServiceRole
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html
      # For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the build spec. You must connect your AWS account to your GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub Authorize application page, for Organization access, choose Request access next to each repository you want to allow AWS CodeBuild to have access to, and then choose Authorize application. (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the source object, set the auth object's type value to OAUTH. 
      Source:
        Type: GITHUB
        Location: https://github.com/comp9447-team4/soar
        BuildSpec: mythical-mysfits/mysfits-service/buildspec.yml
        ReportBuildStatus: true
        Auth:
          Type: OAUTH


  # CODEPIPELINE
  # aws codepipeline create-pipeline --cli-input-json file://~/environment/aws-modern-application-workshop/module-2/aws-cli/code-pipeline.json
  CodePipelineMysfitsService:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: MythicalMysfitsServiceCICDPipeline
      RoleArn: !ImportValue MythicalMysfitsCoreStack:MythicalMysfitsServiceCodePipelineServiceRole
      Stages:
      # Use Github Codestar as source
      # https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodestarConnectionSource.html
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: CodeStarSourceConnection
          OutputArtifacts:
          - Name: MythicalMysfitsService-SourceArtifact
          Configuration:
            ConnectionArn: !ImportValue GithubRepoCodeStarConnectionArn
            BranchName: !FindInMap [Branch, !Ref "AWS::Region", !Ref AwsProfile ]
            FullRepositoryId: comp9447-team4/soar
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          OutputArtifacts:
          - Name: MythicalMysfitsService-BuildArtifact
          InputArtifacts:
          - Name: MythicalMysfitsService-SourceArtifact
          Configuration:
            ProjectName: MythicalMysfitsServiceCodeBuildProject
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: ECS
          InputArtifacts:
          - Name: MythicalMysfitsService-BuildArtifact
          Configuration:
            ClusterName: MythicalMysfits-Cluster
            ServiceName: MythicalMysfits-Service
            FileName: imagedefinitions.json
      ArtifactStore:
        Type: S3
        Location: !Ref CodeBuildArtifactsBucket

  # This can fail on the first try, give it a few mins for AWS to create a service role and retry
  # AWS CodeStar Notifications could not create the AWS CloudWatch Events managed rule in your AWS account. If this is your first time creating a notification rule, the service-linked role for AWS CodeStar Notifications might not yet exist. Creation of this role might take up to 15 minutes. Until it exists, notification rule creation will fail. Wait 15 minutes, and then try again.
  # If this is is not the first time you are creating a notification rule, there might be a problem with a network connection, or one or more AWS services might be experiencing issues.
  # Verify your network connection and check to see if there are any issues with AWS services in your AWS Region before trying again. (Service: CodeStarNotifications; Status Code: 400; Error Code: ConfigurationException;
  PipelineNotificationRule2:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      Name: MythicalMysfitsServiceCICDPipeline2
      DetailType: FULL
      Status: ENABLED
      Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:MythicalMysfitsServiceCICDPipeline"
      Targets:
      - TargetAddress: !Ref PipelineSnsTopic
        TargetType: SNS
      # https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#concepts-api
      EventTypeIds:
      - codepipeline-pipeline-pipeline-execution-failed
      - codepipeline-pipeline-pipeline-execution-canceled
      - codepipeline-pipeline-pipeline-execution-started
      - codepipeline-pipeline-pipeline-execution-resumed
      - codepipeline-pipeline-pipeline-execution-succeeded
      - codepipeline-pipeline-pipeline-execution-superseded
      - codepipeline-pipeline-stage-execution-started
      - codepipeline-pipeline-stage-execution-succeeded
      - codepipeline-pipeline-stage-execution-resumed
      - codepipeline-pipeline-stage-execution-canceled
      - codepipeline-pipeline-stage-execution-failed
      - codepipeline-pipeline-action-execution-succeeded
      - codepipeline-pipeline-action-execution-failed
      - codepipeline-pipeline-action-execution-canceled
      - codepipeline-pipeline-action-execution-started

  # Export this SNS topic.
  # Get a lambda to subscribe to it which would forward alerts to Discord.
  PipelineSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: MythicalMysfitsServicePipelineEvents

  # Give a policy to allow codestar to publish messages to sns
  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      # https://docs.aws.amazon.com/dtconsole/latest/userguide/set-up-sns.html
      PolicyDocument:
        Version: '2008-10-17'
        Id: __default_policy_ID
        Statement:
        - Sid: __default_statement_ID
          Effect: Allow
          Principal:
            AWS: "*"
          Action:
          - SNS:GetTopicAttributes
          - SNS:SetTopicAttributes
          - SNS:AddPermission
          - SNS:RemovePermission
          - SNS:DeleteTopic
          - SNS:Subscribe
          - SNS:ListSubscriptionsByTopic
          - SNS:Publish
          - SNS:Receive
          Resource: !Ref PipelineNotificationRule2
          Condition:
            StringEquals:
              AWS:SourceOwner: !Sub "${AWS::AccountId}"
        - Sid: AWSCodeStarNotifications_publish
          Effect: Allow
          Principal:
            Service:
            - codestar-notifications.amazonaws.com
          Action: SNS:Publish
          Resource: !Ref PipelineNotificationRule2
      Topics:
      - !Ref PipelineSnsTopic

Outputs:
  CodeBuildArtifactsBucket:
    Value: !Ref CodeBuildArtifactsBucket
    Description: CodeBuildArtifactsBucket
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'CodeBuildArtifactsBucket' ] ]
  LambdaArtifactsBucket:
    Value: !Ref LambdaArtifactsBucket
    Description: Lambda artifacts bucket
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'LambdaArtifactsBucket' ] ]
  PipelineSnsTopic:
    Value: !Ref PipelineSnsTopic
    Export:
      Name: !Sub "${AWS::StackName}:PipelineSnsTopic"